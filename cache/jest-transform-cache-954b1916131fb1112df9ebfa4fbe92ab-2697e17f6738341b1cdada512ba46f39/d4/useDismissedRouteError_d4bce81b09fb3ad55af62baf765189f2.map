{"version":3,"mappings":";;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,4BAAT,CACbC,KADa,EAEb;EAAA;;EACA,sBAAgDC,KAAK,CAACC,QAAND,CAC9C,IAD8CA,CAAhD;EAAA;EAAA,IAAOE,gBAAP;EAAA,IAAyBC,mBAAzB;;EAIA,IAAMC,kBAAkB,GAAGF,gBAAgB,yBACvCH,KAAK,CAACM,MAANN,CAAaO,IAAbP,CAAmBQ,eAAD;IAAA,OAAWA,KAAK,CAACC,GAAND,KAAcL,gBAAzB;EAAA,CAAlBH,CADuC,uDACvCU,mBAA8DC,IADvB,GAEvC,IAFJ;EAIAV,KAAK,CAACW,SAANX,CAAgB,YAAM;IACpB,IAAII,kBAAJ,EAAwB;MACtB,IAAMQ,OAAO,GACV,iBAAcR,kBAAd,qVADH;MAKAS,OAAO,CAACC,KAARD,CAAcD,OAAdC;IACD;EARH,GASG,CAACT,kBAAD,CATHJ;EAWA,OAAO;IAAEG;EAAF,CAAP;AACD","names":["useInvalidPreventRemoveError","state","React","useState","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","route","key","_state$routes$find","name","useEffect","message","console","error"],"sources":["useDismissedRouteError.tsx"],"sourcesContent":["import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n"]}