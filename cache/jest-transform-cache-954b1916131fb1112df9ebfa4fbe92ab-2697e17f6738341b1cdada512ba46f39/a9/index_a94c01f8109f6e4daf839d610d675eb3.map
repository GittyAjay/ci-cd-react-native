{"version":3,"mappings":";;;;;;;;AAOA,SAASA,SAAT;MACEC;MACAC;EAKA,IAAMC,YAAY,GAAGC,aAAmB,EAAnBA,EAAuBC,OAA5C;;EACA,IAAIJ,MAAM,IAAI,CAACE,YAAY,CAACG,OAA5B,EAAqC;IACnCH,YAAY,CAACG,OAAbH,GAAuB,IAAII,OAAJ,CAAY,UAACC,OAAD;MACjCL,YAAY,CAACK,OAAbL,GAAuBK,OAAvBL;IADqB,EAAvBA;IAGA,MAAMA,YAAY,CAACG,OAAnB;EAJF,OAKO,IAAIL,MAAJ,EAAY;IACjB,MAAME,YAAY,CAACG,OAAnB;EADK,OAEA,IAAIH,YAAY,CAACG,OAAjB,EAA0B;IAC/BH,YAAY,CAACK,OAAbL;IACAA,YAAY,CAACG,OAAbH,GAAuBM,SAAvBN;EACD;;EAED,OAAOO,6BAACC,cAADD,QAAWR,QAAXQ,CAAP;AACD;;SAQeE;MAASX;MAAQC;gCAAUW;MAAAA,6CAAc,IAAdA,GAAcC;EACvD,OACEJ,6BAACK,cAADL;IAAUM,QAAQ,EAAEH;EAApB,GACEH,6BAACV,SAADU;IAAWT,MAAM,EAAEA;EAAnB,GAA4BC,QAA5BQ,CADFA,CADF;AAKD","names":["Suspender","freeze","children","promiseCache","useRef","current","promise","Promise","resolve","undefined","React","Fragment","Freeze","placeholder","_ref2$placeholder","Suspense","fallback"],"sources":["../src/index.tsx"],"sourcesContent":["import React, { useRef, Suspense, Fragment } from \"react\";\n\ninterface StorageRef {\n  promise?: Promise<void>;\n  resolve?: (value: void | PromiseLike<void>) => void;\n}\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  const promiseCache = useRef<StorageRef>({}).current;\n  if (freeze && !promiseCache.promise) {\n    promiseCache.promise = new Promise((resolve) => {\n      promiseCache.resolve = resolve;\n    });\n    throw promiseCache.promise;\n  } else if (freeze) {\n    throw promiseCache.promise;\n  } else if (promiseCache.promise) {\n    promiseCache.resolve!();\n    promiseCache.promise = undefined;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n"]}