{"version":3,"mappings":"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","names":["isAndroid","Platform","OS","MaybeNestedStack","options","route","presentation","headerHeight","children","colors","header","headerShown","contentStyle","isHeaderInModal","undefined","headerShownPreviousRef","React","useRef","useEffect","current","name","content","_DebugContainer","style","styles","container","backgroundColor","background","stackPresentation","_reactNativeScreens","enabled","StyleSheet","absoluteFill","_HeaderConfig","canGoBack","SceneView","descriptor","previousDescriptor","nextDescriptor","index","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","navigation","render","animationDuration","animationTypeForReplace","gestureEnabled","headerBackButtonMenuEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","isHeaderInPush","insets","frame","isModal","isIPhone","isPad","isTVOS","isLandscape","width","height","topInset","top","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","preventedRoutes","defaultHeaderHeight","useState","customHeaderHeight","setCustomHeaderHeight","headerBack","title","isRemovePrevented","key","_preventedRoutes$rout","preventRemove","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","nativeBackButtonDismissalEnabled","preventNativeDismiss","_native","Provider","value","_elements","_reactNative","onLayout","e","nativeEvent","layout","back","headerBackTitle","NativeStackViewInner","state","descriptors","setNextDismissedKey","routes","map","previousKey","_state$routes","nextKey","_state$routes2","emit","type","data","closing","target","event","dispatch","StackActions","pop","dismissCount","source","NativeStackView","props","create","flex"],"sources":["NativeStackView.native.tsx"],"sourcesContent":["import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: () => void;\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  index,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const isHeaderInPush = isAndroid\n    ? headerShown\n    : presentation === 'card' && headerShown !== false;\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone =\n    Platform.OS === 'ios' && !(Platform.isPad || Platform.isTVOS);\n  const isLandscape = frame.width > frame.height;\n\n  const topInset = isModal || (isIPhone && isLandscape) ? 0 : insets.top;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      // Props for enabling preventing removal in native-stack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      // @ts-expect-error prop not publicly exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      onNativeDismissCancelled={onNativeDismissCancelled}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || isHeaderInPush !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                isHeaderInPush !== false\n                  ? headerHeight\n                  : parentHeaderHeight ?? 0\n              }\n            >\n              {header !== undefined && headerShown !== false ? (\n                <View\n                  onLayout={(e) => {\n                    setCustomHeaderHeight(e.nativeEvent.layout.height);\n                  }}\n                >\n                  {header({\n                    back: headerBack,\n                    options,\n                    route,\n                    navigation,\n                  })}\n                </View>\n              ) : (\n                <HeaderConfig\n                  {...options}\n                  route={route}\n                  headerBackButtonMenuEnabled={\n                    isRemovePrevented !== undefined\n                      ? !isRemovePrevented\n                      : headerBackButtonMenuEnabled\n                  }\n                  headerShown={isHeaderInPush}\n                  headerHeight={headerHeight}\n                  headerBackTitle={\n                    options.headerBackTitle !== undefined\n                      ? options.headerBackTitle\n                      : headerBack?.title\n                  }\n                  canGoBack={headerBack !== undefined}\n                />\n              )}\n              <MaybeNestedStack\n                options={options}\n                route={route}\n                presentation={presentation}\n                headerHeight={headerHeight}\n              >\n                <HeaderBackContext.Provider value={headerBack}>\n                  {render()}\n                </HeaderBackContext.Provider>\n              </MaybeNestedStack>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}