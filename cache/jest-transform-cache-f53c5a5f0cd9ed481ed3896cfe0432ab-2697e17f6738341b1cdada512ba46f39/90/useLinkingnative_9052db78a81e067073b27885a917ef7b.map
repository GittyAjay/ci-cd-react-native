{"version":3,"mappings":"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","names":["linkingHandlers","useLinking","ref","independent","enabled","prefixes","filter","config","getInitialURL","Promise","race","Linking","resolve","setTimeout","subscribe","listener","callback","url","subscription","addEventListener","removeEventListener","_Linking$removeEventL","bind","remove","getStateFromPath","getStateFromPathDefault","getActionFromState","getActionFromStateDefault","React","useEffect","process","env","NODE_ENV","undefined","length","console","error","Platform","OS","join","trim","handler","Symbol","push","index","indexOf","splice","enabledRef","useRef","prefixesRef","filterRef","configRef","getInitialURLRef","getStateFromPathRef","getActionFromStateRef","current","getStateFromURL","useCallback","path","getInitialState","state","then","thenable","onfulfilled","catch","navigation","rootState","getRootState","routes","some","r","routeNames","includes","name","warn","action","dispatch","e","message","resetRoot"],"sources":["useLinking.native.tsx"],"sourcesContent":["import {\n  getActionFromState as getActionFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport extractPathFromURL from './extractPathFromURL';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    prefixes,\n    filter,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      // Storing this in a local variable stops Jest from complaining about import after teardown\n      const removeEventListener = Linking.removeEventListener?.bind(Linking);\n\n      return () => {\n        // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          removeEventListener?.('url', callback);\n        }\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const filterRef = React.useRef(filter);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    filterRef.current = filter;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const getStateFromURL = React.useCallback(\n    (url: string | null | undefined) => {\n      if (!url || (filterRef.current && !filterRef.current(url))) {\n        return undefined;\n      }\n\n      const path = extractPathFromURL(prefixesRef.current, url);\n\n      return path !== undefined\n        ? getStateFromPathRef.current(path, configRef.current)\n        : undefined;\n    },\n    []\n  );\n\n  const getInitialState = React.useCallback(() => {\n    let state: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const url = getInitialURLRef.current();\n\n      if (url != null && typeof url !== 'string') {\n        return url.then((url) => {\n          const state = getStateFromURL(url);\n\n          return state;\n        });\n      }\n\n      state = getStateFromURL(url);\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(state) : state);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, [getStateFromURL]);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const navigation = ref.current;\n      const state = navigation ? getStateFromURL(url) : undefined;\n\n      if (navigation && state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        const action = getActionFromStateRef.current(state, configRef.current);\n\n        if (action !== undefined) {\n          try {\n            navigation.dispatch(action);\n          } catch (e) {\n            // Ignore any errors from deep linking.\n            // This could happen in case of malformed links, navigation object not being initialized etc.\n            console.warn(\n              `An error occurred when trying to handle the link '${url}': ${\n                typeof e === 'object' && e != null && 'message' in e\n                  ? // @ts-expect-error: we're already checking for this\n                    e.message\n                  : e\n              }`\n            );\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, getStateFromURL, ref, subscribe]);\n\n  return {\n    getInitialState,\n  };\n}\n"]}